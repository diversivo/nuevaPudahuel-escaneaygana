// SCSS mixin to generate the final CSS code for the slider

// Params:
// - $cssClass: CSS class to match the slider container
// - $slider-length: Length (width or height) of slider container
// - $slider-center: If slider should be centered
// - $slide-width: Fixed width for each slide
// - $slide-height: Fixed height for each slide
// - $vertical: If slider should be vertical (true), or horizontal (false)
// - $reverse: If slider should have reversed slides (first items at the end)
// - $debug: Show helpful background colors to help debugging

@mixin ms(
  // Default values
  $cssClass: 'ms-container',
  $slider-length: 400px,
  $slider-center: false,
  $slide-width: 90px,
  $slide-height: 90px,
  $vertical: false,
  $reverse: false,
  $debug: false
) {
  // Slider container
  .#{$cssClass} {
    position: relative;
    @if $slider-center {
      margin: 0 auto;
    }
    overflow: hidden;
    @if $debug {
      background-color: rgba(0, 0, 0, 0.2);
    }

    @if $debug {
      // Just for testing the current slide position (centered)
      &:before {
        content: '';
        position: absolute;
        background-color: rgba(0, 0, 0, 0.3);
        border-radius: 100%;
      }
    }

    @if $vertical {
      // Styles for vertical slider
      &.ms-container--vertical {
        width: $slide-width;
        height: $slider-length;
        max-height: 100%;
  
        @if $debug {
          &:before {
            left: 0;
            top: calc(50% - #{$slide-height / 2});
            width: 100%;
            height: $slide-height;
          }
        }
  
        // Centering slider track vertically, to get current slide centered
        .ms-track {
          flex-direction: column;
          top: calc(50% - #{$slide-height / 2});
        }
  
        @if $reverse {
          // Reverse styles
          &.ms-container--reverse .ms-track {
            flex-direction: column-reverse;
            top: auto;
            bottom: calc(50% - #{$slide-height / 2});
          }
        }
  
        // Positioning slides vertically
        .ms-slide {
          display: flex;
        }
      }
    } @else {
      // Styles for horizontal slider
      &.ms-container--horizontal {
        width: $slider-length;
        height: $slide-height;
        max-width: 100%;
  
        @if $debug {
          &:before {
            left: calc(50% - #{$slide-width / 2});
            top: 0;
            width: $slide-width;
            height: 100%;
          }
        }
  
        // Centering slider track horizontally, to get current slide centered
        .ms-track {
          flex-direction: row;
          left: calc(50% - #{$slide-width / 2});
        }
  
        @if $reverse {
          // Reverse styles
          &.ms-container--reverse .ms-track {
            flex-direction: row-reverse;
            left: auto;
            right: calc(50% - #{$slide-width / 2});
          }
        }
  
        // Positioning slides horizontally
        .ms-slide {
          display: inline-flex;
        }
      }
    }
  
    // Slider track
    .ms-track {
      display: flex;
      position: absolute;
      white-space: nowrap;
      padding: 0;
      margin: 0;
      list-style: none;
    }
  
    // Slides
    .ms-slide {
      align-items: center;
      justify-content: center;
      width: $slide-width;
      height: $slide-height;
      user-select: none;
  
      @if $debug {
        // A testing backgrounds for slides
        &:nth-child(2n) {
          background-color: rgba(0, 0, 0, 0.1);
        }
        &:nth-child(2n + 1) {
          background-color: rgba(0, 0, 0, 0.2);
        }
      }
    }
  }
}


// Images

$ms-images-slide-width: 280px;
$ms-images-slide-height: 400px;

// SCSS mixin to generate the final CSS code for the slider
@include ms(
  $cssClass: 'ms--images', // CSS class to match the slider container
  $slider-length: 100%,    // The slider container will have full width
  $slider-center: true,   // Don't need to center it, as it is full width
  $slide-width: $ms-images-slide-width,   // Fixed width for each slide
  $slide-height: $ms-images-slide-height, // Fixed height for each slide
  $vertical: false, // The slider should be horizontal
  $reverse: false,  // Normal order
  $debug: false     // No debbug backgrounds in production
);

// Custom styles for images slider
.ms--images {

   // Gradients to hide the adjacent numbers smoothly
   &:before, &:after {
    content: '';
    position: absolute;
    top: 0;
    width: 15%;
    height: 100%;
    z-index: 1;
    pointer-events: none;
  }
  &:before {
    left: 0;
    background-image: linear-gradient(to right, rgba(8, 108, 167,1) 25%, rgba(8, 108, 167, 0));
  }
  &:after {
    right: 0;
    background-image: linear-gradient(to left, rgba(8, 108, 167,1) 25%, rgba(8, 108, 167, 0));
  }

  .ms-slide__image-container {
    width: 250px;
    height: 98%;
    background-color: rgba(0, 0, 0, 0.3);
    overflow: hidden;
    border-radius: 20px;
    -webkit-box-shadow: 0px 0px 3px 0px rgba(255, 255, 255, 0.75);
    -moz-box-shadow: 0px 0px 3px 0px rgba(255, 255, 255, 0.75);
    box-shadow: 0px 0px 3px 0px rgba(255, 255, 255, 0.75);
  }

  .ms-slide__image {
    width: 100%;
    height: 100%;
    background-size: cover;
  }
}


// Numbers

$ms-numbers-slide-width: 200px;
$ms-numbers-slide-height: 240px;


// Titles

$ms-titles-slide-width: 280px;
$ms-titles-slide-height: 100px;

@include ms(
  $cssClass: 'ms--titles',
  $slider-length: 100%,
  $slider-center: true,
  $slide-width: $ms-titles-slide-width,
  $slide-height: $ms-titles-slide-height,
  $vertical: false,
  $reverse: false,
  $debug: false
);

.ms--titles {
  position: absolute;
  // left: calc(50% + 4 - #{$ms-images-slide-width / 2});
  top: calc(50% + 100px - #{$ms-titles-slide-height / 2});
  z-index: 1;
  pointer-events: none;
  text-align: center;

  .ms-track {
    white-space: normal;
  }

  .ms-slide {
    font-size: 1em;
    font-weight: 600;
    display: flex !important;
    flex-wrap: wrap;
    padding-left: 10px;
    padding-right: 10px;

    span{
      width: 90%;
      font-size: 9px;
      color: #747474;
    }

    h3 {
      width: 90%;
      color: #E61856;
      margin: 0;
      font-size: 18px;
      // text-shadow: 1px 1px 2px black;
    }
  }
}

$color-primary: rgba(255, 255, 255, 1);
$color-secondary: rgba(255, 255, 255, 0.5);

*, *:before, *:after {
  box-sizing: border-box;
}

a {
  color: $color-primary;
  text-decoration: none;
  cursor: pointer;
}

// .container {
//   position: relative;
//   display: flex;
//   flex-direction: column;
//   min-height: 100vh;
//   width: 100%;
//   background-color:  rgba(8, 108, 167, 1);
// }

.header {
  display: flex;
  align-items: center;
  padding: 30px;
}

.header__logo {
  font-size: 1.3em;
  font-weight: 900;
  letter-spacing: -1px;

  span {
    display: inline-block;
    transform: translateY(4px) rotate(180deg);
    pointer-events: none;
  }
}

.header__menu {
  margin-left: auto;
}

.header__menu__list, .footer__menu__list {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
}

.header__menu__link {
  margin-left: 50px;
}

.footer {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 30px;
}

.footer__menu__link {
  margin-left: 50px;
  color: $color-secondary;
}

.sliders-container {
  position: relative;
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  justify-content: center;
  flex: 1;
}


// Hide header menu and footer in small screens

@media screen and (max-width: 860px) {
  .header__menu, .footer {
    display: none;
  }
}

.spin-btn{
  // position: absolute;
  // top: calc(50% + 200px  );
  // left: calc(50%-145px);
  width: 290px;
  margin: 0 auto;
  height: 47px;
  // background: var(--unnamed-color-e61856) 0% 0% no-repeat padding-box;
  background: #E61856 0% 0% no-repeat;
  border: 1px solid  #E61856;
  border-radius: 24px;
  opacity: 1;
}

.reward__overlay {
  background-image: linear-gradient(
    to bottom, 
    rgba(16, 74, 113,1) 2%, 
    rgba(16, 74, 113,0),
    rgba(16, 74, 113,0)
    );
  width: 100%;
  height: 100%;
  // margin-top: 20px;
  display: block;
  z-index: 10;
  font-size: 8px;
  padding-top: 10px;

  .reward__code{
    border-radius: 30px;
    width: 150px;
    height: 35px;
    margin: 0 auto;
    border: 1px solid white;
    background-color: white;
    font-size: 16px;
    color: #E61856;
    display: block;
  }

  .reward__lower-text {
    color: #00D8FF;
    text-shadow: black;
    font-size: 8px;
  }

  p{
    font-size: 8px;
    height: 20px;
    line-height: 20px;
    font-weight: bold;
    text-align: center;
    width: 100%;
    display: block;
    text-transform: uppercase;
    color: white;
  }
}

body {
  color: $color-primary;
  background-color: #1B1C21;
  // overflow: hidden;
}

.overflow-hidden{
  overflow: hidden;
}